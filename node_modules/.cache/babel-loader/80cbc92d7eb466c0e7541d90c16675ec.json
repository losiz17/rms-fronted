{"ast":null,"code":"var _jsxFileName = \"/Users/yoshikawario/rms-react-client/src/components/search.jsx\";\nimport React, { Component } from \"react\";\n\nclass search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // usstate: props.initState,\n      // keyword: \"key\"\n      res: []\n    }; // this.onChange = this.onChange.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTextAreaChange = this.onTextAreaChange.bind(this);\n  } // onChange(e) {\n  //     console.log(e.target.value);\n  //     this.setState({ usstate: e.target.value });\n  // }\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state);\n    fetch(\"http://localhost:8000/api/v1/users/search\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: this.state\n    }).then(response => response.json()).then(responseJson => {\n      this.setState({\n        loading: true,\n        name: \"responseJson\"\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  onTextAreaChange(e) {\n    this.setState({\n      keyword: e.target.value\n    });\n  }\n\n  render() {\n    // var states = [\n    //     { code: \"CA\", name: \"California\" },\n    //     { code: \"HI\", name: \"Hawaii\" },\n    //     { code: \"TX\", name: \"Texas\" },\n    //     { code: \"WA\", name: \"Washington\" }\n    // ];\n    // var options = states.map(n => (\n    //     <option key={n.code} value={n.code}>\n    //         {n.name}\n    //     </option>\n    // ));\n    return React.createElement(\"form\", {\n      className: \"form-inline\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group mx-sm-3 mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control mr-sm-2\",\n      type: \"text\",\n      placeholder: \"Search\",\n      \"aria-label\": \"Search\",\n      value: this.state.desc,\n      onChange: this.onTextAreaChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary mb-2\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u691C\\u7D22\")), this.state.todo.map(todo => React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      defaultValue: todo.title,\n      onChange: e => todo.title = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"\\u7DE8\\u96C6\",\n      onClick: () => this.updateTodo(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"\\u524A\\u9664\",\n      onClick: () => this.deleteTodo(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default search;","map":{"version":3,"sources":["/Users/yoshikawario/rms-react-client/src/components/search.jsx"],"names":["React","Component","search","constructor","props","state","res","onSubmit","bind","onTextAreaChange","e","preventDefault","console","log","fetch","method","headers","Accept","body","then","response","json","responseJson","setState","loading","name","catch","error","keyword","target","value","render","desc","todo","map","id","title","updateTodo","deleteTodo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // usstate: props.initState,\n            // keyword: \"key\"\n            res: []\n        };\n        // this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onTextAreaChange = this.onTextAreaChange.bind(this);\n    }\n\n    // onChange(e) {\n    //     console.log(e.target.value);\n    //     this.setState({ usstate: e.target.value });\n    // }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(this.state);\n        fetch(\"http://localhost:8000/api/v1/users/search\", {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: this.state\n        })\n            .then(response => response.json())\n            .then(responseJson => {\n                this.setState({\n                    loading: true,\n                    name: \"responseJson\"\n                });\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    onTextAreaChange(e) {\n        this.setState({ keyword: e.target.value });\n    }\n\n    render() {\n        // var states = [\n        //     { code: \"CA\", name: \"California\" },\n        //     { code: \"HI\", name: \"Hawaii\" },\n        //     { code: \"TX\", name: \"Texas\" },\n        //     { code: \"WA\", name: \"Washington\" }\n        // ];\n        // var options = states.map(n => (\n        //     <option key={n.code} value={n.code}>\n        //         {n.name}\n        //     </option>\n        // ));\n        return (\n            <form className=\"form-inline\" onSubmit={this.onSubmit}>\n                {/* <div>\n                    <select value={this.state.usstate} onChange={this.onChange}>\n                        {options}\n                    </select>\n                </div> */}\n                <div className=\"form-group mx-sm-3 mb-2\">\n                    <input\n                        className=\"form-control mr-sm-2\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        aria-label=\"Search\"\n                        value={this.state.desc}\n                        onChange={this.onTextAreaChange}\n                    />\n                </div>\n\n                <div>\n                    <button className=\"btn btn-primary mb-2\" type=\"submit\">\n                        検索\n                    </button>\n                </div>\n                {this.state.todo.map(todo => (\n                    <li key={todo.id}>\n                        <input\n                            type=\"text\"\n                            defaultValue={todo.title}\n                            onChange={e => (todo.title = e.target.value)}\n                        />\n                        <input\n                            type=\"button\"\n                            value=\"編集\"\n                            onClick={() => this.updateTodo(todo)}\n                        />\n                        <input\n                            type=\"button\"\n                            value=\"削除\"\n                            onClick={() => this.deleteTodo(todo)}\n                        />\n                    </li>\n                ))}\n            </form>\n        );\n    }\n}\n\nexport default search;\n"]},"metadata":{},"sourceType":"module"}